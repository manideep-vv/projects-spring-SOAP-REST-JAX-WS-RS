package com.ampf.soapdemo.controller;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.3.0
 * 2025-04-13T16:17:27.739+05:30
 * Generated source version: 3.3.0
 *
 */
@WebServiceClient(name = "EmployeeControllerService",
                  wsdlLocation = "classpath:employee.wsdl",
                  targetNamespace = "http://controller.soapDemo.ampf.com/")
public class EmployeeControllerService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://controller.soapDemo.ampf.com/", "EmployeeControllerService");
    public final static QName EmployeeControllerPort = new QName("http://controller.soapDemo.ampf.com/", "EmployeeControllerPort");
    static {
        URL url = EmployeeControllerService.class.getClassLoader().getResource("employee.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(EmployeeControllerService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "classpath:employee.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public EmployeeControllerService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public EmployeeControllerService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public EmployeeControllerService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public EmployeeControllerService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public EmployeeControllerService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public EmployeeControllerService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns EmployeeController
     */
    @WebEndpoint(name = "EmployeeControllerPort")
    public EmployeeController getEmployeeControllerPort() {
        return super.getPort(EmployeeControllerPort, EmployeeController.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EmployeeController
     */
    @WebEndpoint(name = "EmployeeControllerPort")
    public EmployeeController getEmployeeControllerPort(WebServiceFeature... features) {
        return super.getPort(EmployeeControllerPort, EmployeeController.class, features);
    }

}
