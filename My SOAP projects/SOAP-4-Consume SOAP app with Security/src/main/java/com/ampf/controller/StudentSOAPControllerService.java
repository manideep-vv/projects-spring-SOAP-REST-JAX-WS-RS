package com.ampf.controller;

import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceFeature;
import jakarta.xml.ws.Service;

/**
 * This class was generated by Apache CXF 4.0.4
 * 2025-06-02T15:57:18.501+05:30
 * Generated source version: 4.0.4
 *
 */
@WebServiceClient(name = "StudentSOAPControllerService",
                  wsdlLocation = "classpath:student.wsdl",
                  targetNamespace = "http://controller.ampf.com/")
public class StudentSOAPControllerService extends Service {

    public static final URL WSDL_LOCATION;

    public static final QName SERVICE = new QName("http://controller.ampf.com/", "StudentSOAPControllerService");
    public static final QName StudentSOAPControllerPort = new QName("http://controller.ampf.com/", "StudentSOAPControllerPort");
    static {
        URL url = StudentSOAPControllerService.class.getClassLoader().getResource("student.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(StudentSOAPControllerService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "classpath:student.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public StudentSOAPControllerService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public StudentSOAPControllerService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public StudentSOAPControllerService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public StudentSOAPControllerService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public StudentSOAPControllerService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public StudentSOAPControllerService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns StudentSOAPController
     */
    @WebEndpoint(name = "StudentSOAPControllerPort")
    public StudentSOAPController getStudentSOAPControllerPort() {
        return super.getPort(StudentSOAPControllerPort, StudentSOAPController.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns StudentSOAPController
     */
    @WebEndpoint(name = "StudentSOAPControllerPort")
    public StudentSOAPController getStudentSOAPControllerPort(WebServiceFeature... features) {
        return super.getPort(StudentSOAPControllerPort, StudentSOAPController.class, features);
    }

}
